{
  "commands": {
    "call": {
      "aliases": [],
      "args": {
        "actorId": {
          "description": "Name or ID of the Actor to run (e.g. \"my-actor\", \"apify/hello-world\" or \"E2jjCZBezvAZnX8Rb\"). If not provided, the command runs the remote Actor specified in the '.actor/actor.json' file.",
          "name": "actorId",
          "required": false
        }
      },
      "description": "Executes Actor remotely using your authenticated account.\nReads input from local key-value store by default.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "build": {
          "char": "b",
          "description": "Tag or number of the build to run (e.g. \"latest\" or \"1.2.34\").",
          "name": "build",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "timeout": {
          "char": "t",
          "description": "Timeout for the Actor run in seconds. Zero value means there is no timeout.",
          "name": "timeout",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "memory": {
          "char": "m",
          "description": "Amount of memory allocated for the Actor run, in megabytes.",
          "name": "memory",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "input": {
          "char": "i",
          "description": "Optional JSON input to be given to the Actor.",
          "exclusive": [
            "input-file"
          ],
          "name": "input",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "input-file": {
          "aliases": [
            "if"
          ],
          "description": "Optional path to a file with JSON input to be given to the Actor. The file must be a valid JSON file. You can also specify `-` to read from standard input.",
          "exclusive": [
            "input"
          ],
          "name": "input-file",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "silent": {
          "char": "s",
          "description": "Prevents printing the logs of the Actor run to the console.",
          "name": "silent",
          "allowNo": false,
          "type": "boolean"
        },
        "output-dataset": {
          "char": "o",
          "description": "Prints out the entire default dataset on successful run of the Actor.",
          "name": "output-dataset",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "call",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "call.js"
      ]
    },
    "check-version": {
      "aliases": [],
      "args": {},
      "description": "Checks that installed Apify CLI version is up to date.",
      "flags": {
        "enforce-update": {
          "char": "e",
          "description": "[Optional] Enforce version update from NPM",
          "name": "enforce-update",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hidden": true,
      "hiddenAliases": [
        "cv"
      ],
      "id": "check-version",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "check-version.js"
      ]
    },
    "create": {
      "aliases": [],
      "args": {
        "actorName": {
          "description": "Name of the Actor and its directory",
          "name": "actorName",
          "required": false
        }
      },
      "description": "Creates an Actor project from a template in a new directory.",
      "flags": {
        "template": {
          "char": "t",
          "description": "Template for the Actor. If not provided, the command will prompt for it.\nVisit https://raw.githubusercontent.com/apify/actor-templates/master/templates/manifest.json to find available template names.",
          "name": "template",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "skip-dependency-install": {
          "description": "Skip installing Actor dependencies.",
          "name": "skip-dependency-install",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "template-archive-url": {
          "description": "Actor template archive url. Useful for developing new templates.",
          "hidden": true,
          "name": "template-archive-url",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "omit-optional-deps": {
          "aliases": [
            "no-optional"
          ],
          "description": "Skip installing optional dependencies.",
          "name": "omit-optional-deps",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "create",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "create.js"
      ]
    },
    "edit-input-schema": {
      "aliases": [],
      "args": {
        "path": {
          "description": "Optional path to your INPUT_SCHEMA.json file. If not provided default platform location for input schema is used.",
          "name": "path",
          "required": false
        }
      },
      "description": "Lets you edit your input schema that would be used on the platform in a visual input schema editor.",
      "flags": {},
      "hasDynamicHelp": false,
      "hidden": true,
      "hiddenAliases": [
        "eis"
      ],
      "id": "edit-input-schema",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "edit-input-schema.js"
      ]
    },
    "info": {
      "aliases": [],
      "args": {},
      "description": "Prints details about your currently authenticated Apify account.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "info",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "info.js"
      ]
    },
    "init-wrap-scrapy": {
      "aliases": [],
      "args": {
        "path": {
          "description": "Optional path to your scrapy project. If not provided, the current directory is used.",
          "name": "path",
          "required": false
        }
      },
      "description": "Wraps your existing Scrapy project to work like an Apify Actor.\n\nIt adds the following features:\n- Automatic retry of failed requests\n- Automatic proxy rotation\n- Automatic user agent rotation\n...\n",
      "flags": {},
      "hasDynamicHelp": false,
      "hidden": true,
      "hiddenAliases": [],
      "id": "init-wrap-scrapy",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "init-wrap-scrapy.js"
      ]
    },
    "init": {
      "aliases": [],
      "args": {
        "actorName": {
          "description": "Name of the Actor. If not provided, you will be prompted for it.",
          "name": "actorName",
          "required": false
        }
      },
      "description": "Sets up an Actor project in your current directory by creating actor.json and storage files.\nIf the directory contains a Scrapy project in Python, the command automatically creates wrappers so that you can run your scrapers without changes.\nCreates the '.actor/actor.json' file and the 'storage' directory in the current directory, but does not touch any other existing files or directories.\n\nWARNING: Overwrites existing 'storage' directory.",
      "flags": {
        "yes": {
          "char": "y",
          "description": "Automatic yes to prompts; assume \"yes\" as answer to all prompts. Note that in some cases, the command may still ask for confirmation.",
          "name": "yes",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "init",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "init.js"
      ]
    },
    "login": {
      "aliases": [],
      "args": {},
      "description": "Authenticates your Apify account and saves credentials to '~/.apify'.\nAll other commands use these stored credentials.\n\nRun 'apify logout' to remove authentication.",
      "flags": {
        "token": {
          "char": "t",
          "description": "[Optional] Apify API token",
          "name": "token",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "method": {
          "char": "m",
          "description": "[Optional] Method of logging in to Apify",
          "name": "method",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "console",
            "manual"
          ],
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "login",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "login.js"
      ]
    },
    "logout": {
      "aliases": [],
      "args": {},
      "description": "Removes authentication by deleting your API token and account information from '~/.apify'.\nRun 'apify login' to authenticate again.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "logout",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "logout.js"
      ]
    },
    "pull": {
      "aliases": [],
      "args": {
        "actorId": {
          "description": "Name or ID of the Actor to run (e.g. \"apify/hello-world\" or \"E2jjCZBezvAZnX8Rb\"). If not provided, the command will update the Actor in the current directory based on its name in \".actor/actor.json\" file.",
          "name": "actorId",
          "required": false
        }
      },
      "description": "Download Actor code to current directory. Clones Git repositories or fetches Actor files based on the source type.",
      "flags": {
        "version": {
          "char": "v",
          "description": "Actor version number which will be pulled, e.g. 1.2. Default: the highest version",
          "name": "version",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "dir": {
          "description": "Directory where the Actor should be pulled to",
          "name": "dir",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pull",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "pull.js"
      ]
    },
    "push": {
      "aliases": [],
      "args": {
        "actorId": {
          "description": "Name or ID of the Actor to push (e.g. \"apify/hello-world\" or \"E2jjCZBezvAZnX8Rb\"). If not provided, the command will create or modify the Actor with the name specified in '.actor/actor.json' file.",
          "name": "actorId",
          "required": false
        }
      },
      "description": "Deploys Actor to Apify platform using settings from '.actor/actor.json'.\nFiles under '3' MB upload as \"Multiple source files\"; larger projects upload as ZIP file.\nUse --force to override newer remote versions.",
      "flags": {
        "version": {
          "char": "v",
          "description": "Actor version number to which the files should be pushed. By default, it is taken from the '.actor/actor.json' file.",
          "name": "version",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "build-tag": {
          "char": "b",
          "description": "Build tag to be applied to the successful Actor build. By default, it is taken from the '.actor/actor.json' file",
          "name": "build-tag",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "wait-for-finish": {
          "char": "w",
          "description": "Seconds for waiting to build to finish, if no value passed, it waits forever.",
          "name": "wait-for-finish",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "no-prompt": {
          "description": "Do not prompt for opening the Actor details in a browser. This will also not open the browser automatically.",
          "name": "no-prompt",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "force": {
          "description": "Push an Actor even when the local files are older than the Actor on the platform.",
          "name": "force",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "dir": {
          "description": "Directory where the Actor is located",
          "name": "dir",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "push",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "push.js"
      ]
    },
    "run": {
      "aliases": [],
      "args": {},
      "description": "Executes Actor locally with simulated Apify environment variables.\nStores data in local 'storage' directory.\n\nNOTE: For Node.js Actors, customize behavior by modifying the 'start' script in package.json file.",
      "flags": {
        "purge": {
          "char": "p",
          "description": "Shortcut that combines the --purge-queue, --purge-dataset and --purge-key-value-store options.",
          "name": "purge",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "purge-queue": {
          "description": "Deletes the local directory containing the default request queue before the run starts.",
          "name": "purge-queue",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "purge-dataset": {
          "description": "Deletes the local directory containing the default dataset before the run starts.",
          "name": "purge-dataset",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "purge-key-value-store": {
          "description": "Deletes all records from the default key-value store in the local directory before the run starts, except for the \"INPUT\" key.",
          "name": "purge-key-value-store",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "entrypoint": {
          "description": "Optional entrypoint for running with injected environment variables. \n For Python, it is the module name, or a path to a file. \n For node.js, it is the npm script name, or a path to a JS/MJS file. You can also pass in a directory name, provided that directory contains an \"index.js\" file.",
          "name": "entrypoint",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "input": {
          "char": "i",
          "description": "Optional JSON input to be given to the Actor.",
          "exclusive": [
            "input-file"
          ],
          "name": "input",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "input-file": {
          "aliases": [
            "if"
          ],
          "description": "Optional path to a file with JSON input to be given to the Actor. The file must be a valid JSON file. You can also specify `-` to read from standard input.",
          "exclusive": [
            "input"
          ],
          "name": "input-file",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "run",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "run.js"
      ]
    },
    "validate-schema": {
      "aliases": [],
      "args": {
        "path": {
          "description": "Optional path to your INPUT_SCHEMA.json file. If not provided ./INPUT_SCHEMA.json is used.",
          "name": "path",
          "required": false
        }
      },
      "description": "Validates Actor input schema from one of these locations (in priority order):\n\t\t1. Object in '.actor/actor.json' under \"input\" key\n\t\t2. JSON file path in '.actor/actor.json' \"input\" key\n\t\t3. .actor/INPUT_SCHEMA.json\n\t\t4. INPUT_SCHEMA.json\n\n\t\tOptionally specify custom schema path to validate.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "vis"
      ],
      "id": "validate-schema",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "validate-schema.js"
      ]
    },
    "actor:charge": {
      "aliases": [],
      "args": {
        "eventName": {
          "description": "Name of the event to charge for",
          "name": "eventName",
          "required": true
        }
      },
      "description": "Charge for a specific event in the pay-per-event Actor run.",
      "flags": {
        "count": {
          "description": "Number of events to charge",
          "name": "count",
          "required": false,
          "default": 1,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "idempotency-key": {
          "description": "Idempotency key for the charge request",
          "name": "idempotency-key",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "test-pay-per-event": {
          "description": "Test pay-per-event charging without actually charging",
          "name": "test-pay-per-event",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "actor:charge",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "actor",
        "charge.js"
      ]
    },
    "actor:get-input": {
      "aliases": [],
      "args": {},
      "description": "Gets the Actor input value from the default key-value store associated with the Actor run.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "actor:get-input",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "actor",
        "get-input.js"
      ]
    },
    "actor:get-public-url": {
      "aliases": [],
      "args": {
        "key": {
          "description": "Key of the record in key-value store",
          "name": "key",
          "required": true
        }
      },
      "description": "Get an HTTP URL that allows public access to a key-value store item.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "actor:get-public-url",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "actor",
        "get-public-url.js"
      ]
    },
    "actor:get-value": {
      "aliases": [],
      "args": {
        "key": {
          "description": "Key of the record in key-value store",
          "name": "key",
          "required": true
        }
      },
      "description": "Gets a value from the default key-value store associated with the Actor run.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "actor:get-value",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "actor",
        "get-value.js"
      ]
    },
    "actor": {
      "aliases": [],
      "args": {},
      "description": "Manages runtime data operations inside of a running Actor.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "actor",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "actor",
        "index.js"
      ]
    },
    "actor:push-data": {
      "aliases": [],
      "args": {
        "item": {
          "description": "JSON string with one object or array of objects containing data to be stored in the default dataset.",
          "name": "item"
        }
      },
      "description": "Saves data to Actor's run default dataset.\n\nAccept input as:\n  - JSON argument:\n  $ apify actor push-data {\"key\": \"value\"}\n  - Piped stdin:\n  $ cat ./test.json | apify actor push-data",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "actor:push-data",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "actor",
        "push-data.js"
      ]
    },
    "actor:set-value": {
      "aliases": [],
      "args": {
        "key": {
          "description": "Key of the record in key-value store.",
          "name": "key",
          "required": true
        },
        "value": {
          "description": "Record data, which can be one of the following values:\n- If empty, the record in the key-value store is deleted.\n- If no `contentType` flag is specified, value is expected to be any JSON string value.\n- If options.contentType is set, value is taken as is.",
          "name": "value",
          "required": false
        }
      },
      "description": "Sets or removes record into the default key-value store associated with the Actor run.\n\nIt is possible to pass data using argument or stdin.\n\nPassing data using argument:\n$ apify actor set-value KEY my-value\n\nPassing data using stdin with pipe:\n$ cat ./my-text-file.txt | apify actor set-value KEY --contentType text/plain",
      "flags": {
        "contentType": {
          "char": "c",
          "description": "Specifies a custom MIME content type of the record. By default \"application/json\" is used.",
          "name": "contentType",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "actor:set-value",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "actor",
        "set-value.js"
      ]
    },
    "actors:build": {
      "aliases": [],
      "args": {
        "actorId": {
          "description": "Optional Actor ID or Name to trigger a build for. By default, it will use the Actor from the current directory.",
          "name": "actorId"
        }
      },
      "description": "Creates a new build of the Actor.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "tag": {
          "description": "Build tag to be applied to the successful Actor build. By default, this is \"latest\".",
          "name": "tag",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "version": {
          "description": "Optional Actor Version to build. By default, this will be inferred from the tag, but this flag is required when multiple versions have the same tag.",
          "name": "version",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "log": {
          "description": "Whether to print out the build log after the build is triggered.",
          "name": "log",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "actors:build",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "actors",
        "build.js"
      ]
    },
    "actors:call": {
      "aliases": [],
      "args": {
        "actorId": {
          "description": "Name or ID of the Actor to run (e.g. \"my-actor\", \"apify/hello-world\" or \"E2jjCZBezvAZnX8Rb\"). If not provided, the command runs the remote Actor specified in the '.actor/actor.json' file.",
          "name": "actorId",
          "required": false
        }
      },
      "description": "Executes Actor remotely using your authenticated account.\nReads input from local key-value store by default.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "build": {
          "char": "b",
          "description": "Tag or number of the build to run (e.g. \"latest\" or \"1.2.34\").",
          "name": "build",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "timeout": {
          "char": "t",
          "description": "Timeout for the Actor run in seconds. Zero value means there is no timeout.",
          "name": "timeout",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "memory": {
          "char": "m",
          "description": "Amount of memory allocated for the Actor run, in megabytes.",
          "name": "memory",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "input": {
          "char": "i",
          "description": "Optional JSON input to be given to the Actor.",
          "exclusive": [
            "input-file"
          ],
          "name": "input",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "input-file": {
          "aliases": [
            "if"
          ],
          "description": "Optional path to a file with JSON input to be given to the Actor. The file must be a valid JSON file. You can also specify `-` to read from standard input.",
          "exclusive": [
            "input"
          ],
          "name": "input-file",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "silent": {
          "char": "s",
          "description": "Prevents printing the logs of the Actor run to the console.",
          "name": "silent",
          "allowNo": false,
          "type": "boolean"
        },
        "output-dataset": {
          "char": "o",
          "description": "Prints out the entire default dataset on successful run of the Actor.",
          "name": "output-dataset",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "actors:call",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "actors",
        "call.js"
      ]
    },
    "actors": {
      "aliases": [],
      "args": {},
      "description": "Manages Actor creation, deployment, and execution on the Apify platform.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "actors",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "actors",
        "index.js"
      ]
    },
    "actors:info": {
      "aliases": [],
      "args": {
        "actorId": {
          "description": "The ID of the Actor to return information about.",
          "name": "actorId",
          "required": true
        }
      },
      "description": "Get information about an Actor.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "readme": {
          "description": "Return the Actor README.",
          "exclusive": [
            "input"
          ],
          "name": "readme",
          "allowNo": false,
          "type": "boolean"
        },
        "input": {
          "description": "Return the Actor input schema.",
          "exclusive": [
            "readme"
          ],
          "name": "input",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "actors:info",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "actors",
        "info.js"
      ]
    },
    "actors:ls": {
      "aliases": [],
      "args": {},
      "description": "Prints a list of recently executed Actors or Actors you own.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "my": {
          "description": "Whether to list Actors made by the logged in user.",
          "name": "my",
          "allowNo": false,
          "type": "boolean"
        },
        "offset": {
          "description": "Number of Actors that will be skipped.",
          "name": "offset",
          "default": 0,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "limit": {
          "description": "Number of Actors that will be listed.",
          "name": "limit",
          "default": 20,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "desc": {
          "description": "Sort Actors in descending order.",
          "name": "desc",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "actors:ls",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "actors",
        "ls.js"
      ]
    },
    "actors:pull": {
      "aliases": [],
      "args": {
        "actorId": {
          "description": "Name or ID of the Actor to run (e.g. \"apify/hello-world\" or \"E2jjCZBezvAZnX8Rb\"). If not provided, the command will update the Actor in the current directory based on its name in \".actor/actor.json\" file.",
          "name": "actorId",
          "required": false
        }
      },
      "description": "Download Actor code to current directory. Clones Git repositories or fetches Actor files based on the source type.",
      "flags": {
        "version": {
          "char": "v",
          "description": "Actor version number which will be pulled, e.g. 1.2. Default: the highest version",
          "name": "version",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "dir": {
          "description": "Directory where the Actor should be pulled to",
          "name": "dir",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "actors:pull",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "actors",
        "pull.js"
      ]
    },
    "actors:push": {
      "aliases": [],
      "args": {
        "actorId": {
          "description": "Name or ID of the Actor to push (e.g. \"apify/hello-world\" or \"E2jjCZBezvAZnX8Rb\"). If not provided, the command will create or modify the Actor with the name specified in '.actor/actor.json' file.",
          "name": "actorId",
          "required": false
        }
      },
      "description": "Deploys Actor to Apify platform using settings from '.actor/actor.json'.\nFiles under '3' MB upload as \"Multiple source files\"; larger projects upload as ZIP file.\nUse --force to override newer remote versions.",
      "flags": {
        "version": {
          "char": "v",
          "description": "Actor version number to which the files should be pushed. By default, it is taken from the '.actor/actor.json' file.",
          "name": "version",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "build-tag": {
          "char": "b",
          "description": "Build tag to be applied to the successful Actor build. By default, it is taken from the '.actor/actor.json' file",
          "name": "build-tag",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "wait-for-finish": {
          "char": "w",
          "description": "Seconds for waiting to build to finish, if no value passed, it waits forever.",
          "name": "wait-for-finish",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "no-prompt": {
          "description": "Do not prompt for opening the Actor details in a browser. This will also not open the browser automatically.",
          "name": "no-prompt",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "force": {
          "description": "Push an Actor even when the local files are older than the Actor on the platform.",
          "name": "force",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "dir": {
          "description": "Directory where the Actor is located",
          "name": "dir",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "actors:push",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "actors",
        "push.js"
      ]
    },
    "actors:rm": {
      "aliases": [],
      "args": {
        "actorId": {
          "description": "The Actor ID to delete.",
          "name": "actorId",
          "required": true
        }
      },
      "description": "Permanently removes an Actor from your account.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "actors:rm",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "actors",
        "rm.js"
      ]
    },
    "actors:start": {
      "aliases": [],
      "args": {
        "actorId": {
          "description": "Name or ID of the Actor to run (e.g. \"my-actor\", \"apify/hello-world\" or \"E2jjCZBezvAZnX8Rb\"). If not provided, the command runs the remote Actor specified in the '.actor/actor.json' file.",
          "name": "actorId",
          "required": false
        }
      },
      "description": "Starts Actor remotely and returns run details immediately.\nUses authenticated account and local key-value store for input.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "build": {
          "char": "b",
          "description": "Tag or number of the build to run (e.g. \"latest\" or \"1.2.34\").",
          "name": "build",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "timeout": {
          "char": "t",
          "description": "Timeout for the Actor run in seconds. Zero value means there is no timeout.",
          "name": "timeout",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "memory": {
          "char": "m",
          "description": "Amount of memory allocated for the Actor run, in megabytes.",
          "name": "memory",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "input": {
          "char": "i",
          "description": "Optional JSON input to be given to the Actor.",
          "exclusive": [
            "input-file"
          ],
          "name": "input",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "input-file": {
          "aliases": [
            "if"
          ],
          "description": "Optional path to a file with JSON input to be given to the Actor. The file must be a valid JSON file. You can also specify `-` to read from standard input.",
          "exclusive": [
            "input"
          ],
          "name": "input-file",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "actors:start",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "actors",
        "start.js"
      ]
    },
    "builds:create": {
      "aliases": [],
      "args": {
        "actorId": {
          "description": "Optional Actor ID or Name to trigger a build for. By default, it will use the Actor from the current directory.",
          "name": "actorId"
        }
      },
      "description": "Creates a new build of the Actor.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "tag": {
          "description": "Build tag to be applied to the successful Actor build. By default, this is \"latest\".",
          "name": "tag",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "version": {
          "description": "Optional Actor Version to build. By default, this will be inferred from the tag, but this flag is required when multiple versions have the same tag.",
          "name": "version",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "log": {
          "description": "Whether to print out the build log after the build is triggered.",
          "name": "log",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "builds:create",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "builds",
        "create.js"
      ]
    },
    "builds": {
      "aliases": [],
      "args": {},
      "description": "Manages Actor build processes and versioning.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "builds",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "builds",
        "index.js"
      ]
    },
    "builds:info": {
      "aliases": [],
      "args": {
        "buildId": {
          "description": "The build ID to get information about.",
          "name": "buildId",
          "required": true
        }
      },
      "description": "Prints information about a specific build.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "builds:info",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "builds",
        "info.js"
      ]
    },
    "builds:log": {
      "aliases": [],
      "args": {
        "buildId": {
          "description": "The build ID to get the log from.",
          "name": "buildId",
          "required": true
        }
      },
      "description": "Prints the log of a specific build.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "builds:log",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "builds",
        "log.js"
      ]
    },
    "builds:ls": {
      "aliases": [],
      "args": {
        "actorId": {
          "description": "Optional Actor ID or Name to list runs for. By default, it will use the Actor from the current directory.",
          "name": "actorId"
        }
      },
      "description": "Lists all builds of the Actor.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "offset": {
          "description": "Number of builds that will be skipped.",
          "name": "offset",
          "default": 0,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "limit": {
          "description": "Number of builds that will be listed.",
          "name": "limit",
          "default": 10,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "desc": {
          "description": "Sort builds in descending order.",
          "name": "desc",
          "allowNo": false,
          "type": "boolean"
        },
        "compact": {
          "char": "c",
          "description": "Display a compact table.",
          "name": "compact",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "builds:ls",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "builds",
        "ls.js"
      ]
    },
    "builds:rm": {
      "aliases": [],
      "args": {
        "buildId": {
          "description": "The build ID to delete.",
          "name": "buildId",
          "required": true
        }
      },
      "description": "Permanently removes an Actor build from the Apify platform.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "builds:rm",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "builds",
        "rm.js"
      ]
    },
    "datasets:create": {
      "aliases": [],
      "args": {
        "datasetName": {
          "description": "Optional name for the Dataset",
          "name": "datasetName",
          "required": false
        }
      },
      "description": "Creates a new dataset for storing structured data on your account.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "datasets:create",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "datasets",
        "create.js"
      ]
    },
    "datasets:get-items": {
      "aliases": [],
      "args": {
        "datasetId": {
          "description": "The ID of the Dataset to export the items for",
          "name": "datasetId",
          "required": true
        }
      },
      "description": "Retrieves dataset items in specified format (JSON, CSV, etc).",
      "flags": {
        "limit": {
          "description": "The amount of elements to get from the dataset. By default, it will return all available items.",
          "name": "limit",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "offset": {
          "description": "The offset in the dataset where to start getting items.",
          "name": "offset",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "format": {
          "description": "The format of the returned output. By default, it is set to 'json'",
          "name": "format",
          "default": "json",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "json",
            "jsonl",
            "csv",
            "html",
            "rss",
            "xml",
            "xlsx"
          ],
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "datasets:get-items",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "datasets",
        "get-items.js"
      ]
    },
    "datasets": {
      "aliases": [],
      "args": {},
      "description": "Manages structured data storage and retrieval.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "datasets",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "datasets",
        "index.js"
      ]
    },
    "datasets:info": {
      "aliases": [],
      "args": {
        "storeId": {
          "description": "The dataset store ID to print information about.",
          "name": "storeId",
          "required": true
        }
      },
      "description": "Prints information about a specific dataset.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "datasets:info",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "datasets",
        "info.js"
      ]
    },
    "datasets:ls": {
      "aliases": [],
      "args": {},
      "description": "Prints all datasets on your account.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "offset": {
          "description": "Number of datasets that will be skipped.",
          "name": "offset",
          "default": 0,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "limit": {
          "description": "Number of datasets that will be listed.",
          "name": "limit",
          "default": 20,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "desc": {
          "description": "Sorts datasets in descending order.",
          "name": "desc",
          "allowNo": false,
          "type": "boolean"
        },
        "unnamed": {
          "description": "Lists datasets that don't have a name set.",
          "name": "unnamed",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "datasets:ls",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "datasets",
        "ls.js"
      ]
    },
    "datasets:push-items": {
      "aliases": [],
      "args": {
        "nameOrId": {
          "description": "The dataset ID or name to push the objects to",
          "name": "nameOrId",
          "required": true
        },
        "item": {
          "description": "The object or array of objects to be pushed.",
          "name": "item"
        }
      },
      "description": "Adds data items to specified dataset. Accepts single object or array of objects.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "datasets:push-items",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "datasets",
        "push-items.js"
      ]
    },
    "datasets:rename": {
      "aliases": [],
      "args": {
        "nameOrId": {
          "description": "The dataset ID or name to delete.",
          "name": "nameOrId",
          "required": true
        },
        "newName": {
          "description": "The new name for the dataset.",
          "name": "newName"
        }
      },
      "description": "Change dataset name or removes name with --unname flag.",
      "flags": {
        "unname": {
          "description": "Removes the unique name of the dataset.",
          "name": "unname",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "datasets:rename",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "datasets",
        "rename.js"
      ]
    },
    "datasets:rm": {
      "aliases": [],
      "args": {
        "datasetNameOrId": {
          "description": "The dataset ID or name to delete",
          "name": "datasetNameOrId",
          "required": true
        }
      },
      "description": "Permanently removes a dataset.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "datasets:rm",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "datasets",
        "rm.js"
      ]
    },
    "key-value-stores:create": {
      "aliases": [],
      "args": {
        "keyValueStoreName": {
          "description": "Optional name for the key-value store",
          "name": "keyValueStoreName",
          "required": false
        }
      },
      "description": "Creates a new key-value store on your account.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "kvs:create"
      ],
      "id": "key-value-stores:create",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "key-value-stores",
        "create.js"
      ]
    },
    "key-value-stores:delete-value": {
      "aliases": [],
      "args": {
        "storeId": {
          "description": "The key-value store ID to delete the value from.",
          "name": "storeId",
          "required": true
        },
        "itemKey": {
          "description": "The key of the item in the key-value store.",
          "name": "itemKey",
          "required": true
        }
      },
      "description": "Delete a value from a key-value store.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "kvs:delete-value"
      ],
      "id": "key-value-stores:delete-value",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "key-value-stores",
        "delete-value.js"
      ]
    },
    "key-value-stores:get-value": {
      "aliases": [],
      "args": {
        "keyValueStoreId": {
          "description": "The key-value store ID to get the value from.",
          "name": "keyValueStoreId",
          "required": true
        },
        "itemKey": {
          "description": "The key of the item in the key-value store.",
          "name": "itemKey",
          "required": true
        }
      },
      "description": "Retrieves stored value for specified key. Use --only-content-type to check MIME type.",
      "flags": {
        "only-content-type": {
          "description": "Only return the content type of the specified key",
          "name": "only-content-type",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "kvs:get-value"
      ],
      "id": "key-value-stores:get-value",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "key-value-stores",
        "get-value.js"
      ]
    },
    "key-value-stores": {
      "aliases": [],
      "args": {},
      "description": "Manages persistent key-value storage.\n\nAlias: kvs",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "kvs"
      ],
      "id": "key-value-stores",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "key-value-stores",
        "index.js"
      ]
    },
    "key-value-stores:info": {
      "aliases": [],
      "args": {
        "storeId": {
          "description": "The key-value store ID to print information about.",
          "name": "storeId",
          "required": true
        }
      },
      "description": "Shows information about a key-value store.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "kvs:info"
      ],
      "id": "key-value-stores:info",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "key-value-stores",
        "info.js"
      ]
    },
    "key-value-stores:keys": {
      "aliases": [],
      "args": {
        "storeId": {
          "description": "The key-value store ID to list keys for.",
          "name": "storeId",
          "required": true
        }
      },
      "description": "Lists all keys in a key-value store.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "limit": {
          "description": "The maximum number of keys to return.",
          "name": "limit",
          "default": 20,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "exclusive-start-key": {
          "description": "The key to start the list from.",
          "name": "exclusive-start-key",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "kvs:keys"
      ],
      "id": "key-value-stores:keys",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "key-value-stores",
        "keys.js"
      ]
    },
    "key-value-stores:ls": {
      "aliases": [],
      "args": {},
      "description": "Lists all key-value stores on your account.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "offset": {
          "description": "Number of key-value stores that will be skipped.",
          "name": "offset",
          "default": 0,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "limit": {
          "description": "Number of key-value stores that will be listed.",
          "name": "limit",
          "default": 20,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "desc": {
          "description": "Sorts key-value stores in descending order.",
          "name": "desc",
          "allowNo": false,
          "type": "boolean"
        },
        "unnamed": {
          "description": "Lists key-value stores that don't have a name set.",
          "name": "unnamed",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "kvs:ls"
      ],
      "id": "key-value-stores:ls",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "key-value-stores",
        "ls.js"
      ]
    },
    "key-value-stores:rename": {
      "aliases": [],
      "args": {
        "keyValueStoreNameOrId": {
          "description": "The key-value store ID or name to delete",
          "name": "keyValueStoreNameOrId",
          "required": true
        },
        "newName": {
          "description": "The new name for the key-value store",
          "name": "newName"
        }
      },
      "description": "Renames a key-value store, or removes its unique name.",
      "flags": {
        "unname": {
          "description": "Removes the unique name of the key-value store",
          "name": "unname",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "kvs:rename"
      ],
      "id": "key-value-stores:rename",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "key-value-stores",
        "rename.js"
      ]
    },
    "key-value-stores:rm": {
      "aliases": [],
      "args": {
        "keyValueStoreNameOrId": {
          "description": "The key-value store ID or name to delete",
          "name": "keyValueStoreNameOrId",
          "required": true
        }
      },
      "description": "Permanently removes a key-value store.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "kvs:rm"
      ],
      "id": "key-value-stores:rm",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "key-value-stores",
        "rm.js"
      ]
    },
    "key-value-stores:set-value": {
      "aliases": [],
      "args": {
        "storeId": {
          "description": "The key-value store ID to set the value in.",
          "name": "storeId",
          "required": true
        },
        "itemKey": {
          "description": "The key of the item in the key-value store.",
          "name": "itemKey",
          "required": true
        },
        "value": {
          "description": "The value to set.",
          "name": "value"
        }
      },
      "description": "Stores value with specified key. Set content-type with --content-type flag.",
      "flags": {
        "content-type": {
          "description": "The MIME content type of the value. By default, \"application/json\" is assumed.",
          "name": "content-type",
          "default": "application/json",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "kvs:set-value"
      ],
      "id": "key-value-stores:set-value",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "key-value-stores",
        "set-value.js"
      ]
    },
    "request-queues": {
      "aliases": [],
      "args": {},
      "description": "Manages URL queues for web scraping and automation tasks.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "request-queues",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "request-queues",
        "index.js"
      ]
    },
    "runs:abort": {
      "aliases": [],
      "args": {
        "runId": {
          "description": "The run ID to abort.",
          "name": "runId",
          "required": true
        }
      },
      "description": "Aborts an Actor run.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "force": {
          "char": "f",
          "description": "Whether to force the run to abort immediately, instead of gracefully.",
          "name": "force",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "runs:abort",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "runs",
        "abort.js"
      ]
    },
    "runs": {
      "aliases": [],
      "args": {},
      "description": "Manages Actor run operations ",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "runs",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "runs",
        "index.js"
      ]
    },
    "runs:info": {
      "aliases": [],
      "args": {
        "runId": {
          "description": "The run ID to print information about.",
          "name": "runId",
          "required": true
        }
      },
      "description": "Prints information about an Actor run.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "verbose": {
          "char": "v",
          "description": "Prints more in-depth information about the Actor run.",
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "runs:info",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "runs",
        "info.js"
      ]
    },
    "runs:log": {
      "aliases": [],
      "args": {
        "runId": {
          "description": "The run ID to get the log from.",
          "name": "runId",
          "required": true
        }
      },
      "description": "Prints the log of a specific run.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "runs:log",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "runs",
        "log.js"
      ]
    },
    "runs:ls": {
      "aliases": [],
      "args": {
        "actorId": {
          "description": "Optional Actor ID or Name to list runs for. By default, it will use the Actor from the current directory.",
          "name": "actorId"
        }
      },
      "description": "Lists all runs of the Actor.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "offset": {
          "description": "Number of runs that will be skipped.",
          "name": "offset",
          "default": 0,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "limit": {
          "description": "Number of runs that will be listed.",
          "name": "limit",
          "default": 10,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "desc": {
          "description": "Sort runs in descending order.",
          "name": "desc",
          "allowNo": false,
          "type": "boolean"
        },
        "compact": {
          "char": "c",
          "description": "Display a compact table.",
          "name": "compact",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "runs:ls",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "runs",
        "ls.js"
      ]
    },
    "runs:resurrect": {
      "aliases": [],
      "args": {
        "runId": {
          "description": "The run ID to resurrect.",
          "name": "runId",
          "required": true
        }
      },
      "description": "Resurrects an aborted or finished Actor Run.",
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "runs:resurrect",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "runs",
        "resurrect.js"
      ]
    },
    "runs:rm": {
      "aliases": [],
      "args": {
        "runId": {
          "description": "The run ID to delete.",
          "name": "runId",
          "required": true
        }
      },
      "description": "Deletes an Actor Run.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "runs:rm",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "runs",
        "rm.js"
      ]
    },
    "secrets:add": {
      "aliases": [],
      "args": {
        "name": {
          "description": "Name of the secret",
          "name": "name",
          "required": true
        },
        "value": {
          "description": "Value of the secret",
          "name": "value",
          "required": true
        }
      },
      "description": "Adds a new secret to '~/.apify' for use in Actor environment variables.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "secrets:add",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "secrets",
        "add.js"
      ]
    },
    "secrets": {
      "aliases": [],
      "args": {},
      "description": "Manages secure environment variables for Actors.\n\nExample:\n$ apify secrets add mySecret TopSecretValue123\n\nThe \"mySecret\" value can be used in an environment variable defined in '.actor/actor.json' file by adding the \"@\"\nprefix:\n\n{\n  \"actorSpecification\": 1,\n  \"name\": \"my_actor\",\n  \"environmentVariables\": { \"SECRET_ENV_VAR\": \"@mySecret\" },\n  \"version\": \"0.1\"\n}\n\nWhen the Actor is pushed to Apify cloud, the \"SECRET_ENV_VAR\" and its value is stored as a secret environment variable\nof the Actor.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "secrets",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "secrets",
        "index.js"
      ]
    },
    "secrets:rm": {
      "aliases": [],
      "args": {
        "name": {
          "description": "Name of the secret",
          "name": "name",
          "required": true
        }
      },
      "description": "Permanently deletes a secret from your stored credentials.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "secrets:rm",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "secrets",
        "rm.js"
      ]
    },
    "task": {
      "aliases": [],
      "args": {},
      "description": "Manages scheduled and predefined Actor configurations.",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "task",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "task",
        "index.js"
      ]
    },
    "task:run": {
      "aliases": [],
      "args": {
        "taskId": {
          "description": "Name or ID of the Task to run (e.g. \"my-task\" or \"E2jjCZBezvAZnX8Rb\").",
          "name": "taskId",
          "required": true
        }
      },
      "description": "Executes predefined Actor task remotely using local key-value store for input.\nCustomize with --memory and --timeout flags.\n",
      "flags": {
        "build": {
          "char": "b",
          "description": "Tag or number of the build to run (e.g. \"latest\" or \"1.2.34\").",
          "name": "build",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "timeout": {
          "char": "t",
          "description": "Timeout for the Task run in seconds. Zero value means there is no timeout.",
          "name": "timeout",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "memory": {
          "char": "m",
          "description": "Amount of memory allocated for the Task run, in megabytes.",
          "name": "memory",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "task:run",
      "pluginAlias": "apify-cli",
      "pluginName": "apify-cli",
      "pluginType": "core",
      "strict": true,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "task",
        "run.js"
      ]
    }
  },
  "version": "0.21.6"
}