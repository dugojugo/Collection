import type { ActorRunUsage } from 'apify-client';
import { ApifyCommand } from '../../lib/apify_command.js';
export declare class RunsInfoCommand extends ApifyCommand<typeof RunsInfoCommand> {
    static description: string;
    static args: {
        runId: import("@oclif/core/interfaces").Arg<string, Record<string, unknown>>;
    };
    static flags: {
        verbose: import("@oclif/core/interfaces").BooleanFlag<boolean>;
    };
    static enableJsonFlag: boolean;
    run(): Promise<{
        actor: import("apify-client").Actor | undefined;
        build: import("apify-client").Build | undefined;
        task: import("apify-client").Task | undefined;
        defaultDataset: import("apify-client").Dataset | undefined;
        defaultRequestQueue: import("apify-client").RequestQueue | undefined;
        userId: string;
        statusMessage?: string;
        stats: import("apify-client").ActorRunStats;
        options: import("apify-client").ActorRunOptions;
        exitCode?: number;
        containerUrl: string;
        isContainerServerReady?: boolean;
        gitBranchName?: string;
        usage?: ActorRunUsage;
        usageUsd?: ActorRunUsage;
        pricingInfo?: import("apify-client").ActorRunPricingInfo;
        chargedEventCounts?: Record<string, number>;
        generalAccess?: import("@apify/consts", { with: { "resolution-mode": "require" } }).RUN_GENERAL_ACCESS | null;
        id: string;
        actId: string;
        actorTaskId?: string;
        startedAt: Date;
        finishedAt: Date;
        status: "READY" | "RUNNING" | "SUCCEEDED" | "FAILED" | "ABORTING" | "ABORTED" | "TIMING-OUT" | "TIMED-OUT";
        meta: import("apify-client").ActorRunMeta;
        buildId: string;
        buildNumber: string;
        defaultKeyValueStoreId: string;
        defaultDatasetId: string;
        defaultRequestQueueId: string;
        usageTotalUsd?: number;
    } | undefined>;
    private addDetailedUsage;
    private formatUsd;
}
//# sourceMappingURL=info.d.ts.map