import { type ActorRun, type ApifyClient } from 'apify-client';
import { ApifyCommand } from '../../lib/apify_command.js';
export declare class ActorsCallCommand extends ApifyCommand<typeof ActorsCallCommand> {
    static description: string;
    static flags: {
        input: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        'input-file': import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        silent: import("@oclif/core/interfaces").BooleanFlag<boolean>;
        'output-dataset': import("@oclif/core/interfaces").BooleanFlag<boolean>;
        build: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        timeout: import("@oclif/core/interfaces").OptionFlag<number | undefined, import("@oclif/core/interfaces").CustomOptions>;
        memory: import("@oclif/core/interfaces").OptionFlag<number | undefined, import("@oclif/core/interfaces").CustomOptions>;
    };
    static enableJsonFlag: boolean;
    static args: {
        actorId: import("@oclif/core/interfaces").Arg<string | undefined, Record<string, unknown>>;
    };
    run(): Promise<ActorRun | undefined>;
    static resolveActorId({ client, localActorName, usernameOrId, providedActorNameOrId, }: {
        client: ApifyClient;
        localActorName: string | undefined;
        usernameOrId: string;
        providedActorNameOrId?: string;
    }): Promise<{
        userFriendlyId: string;
        id: string;
        actorData: import("apify-client").Actor;
    }>;
}
//# sourceMappingURL=call.d.ts.map