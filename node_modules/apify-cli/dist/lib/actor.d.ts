import { MemoryStorageOptions } from '@crawlee/memory-storage';
import { StorageClient } from '@crawlee/types';
import { ApifyClientOptions } from 'apify-client';
export declare const APIFY_STORAGE_TYPES: {
    readonly KEY_VALUE_STORE: "KEY_VALUE_STORE";
    readonly DATASET: "DATASET";
    readonly REQUEST_QUEUE: "REQUEST_QUEUE";
};
/**
 * Returns Apify token from environment variable or local auth file.
 * @returns Apify token
 */
export declare const getApifyTokenFromEnvOrAuthFile: () => Promise<string>;
/**
 * Returns instance of ApifyClient or ApifyStorageLocal based on environment variables.
 * @param options - ApifyClient options
 * @param forceCloud - If true then ApifyClient will be returned.
 */
export declare const getApifyStorageClient: (options?: MemoryStorageOptions | ApifyClientOptions, forceCloud?: boolean) => Promise<StorageClient>;
/**
 * Returns default storage id based on environment variables.
 * Throws error if not set and Actor running on platform.
 * @param storeType
 */
export declare const getDefaultStorageId: (storeType: (typeof APIFY_STORAGE_TYPES)[keyof typeof APIFY_STORAGE_TYPES]) => string;
/**
 * Outputs value of record into standard output of the command.
 * @param key - Record key
 */
export declare const outputRecordFromDefaultStore: (key: string) => Promise<void>;
export declare const outputInputFromDefaultStore: () => Promise<void>;
//# sourceMappingURL=actor.d.ts.map