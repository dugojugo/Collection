import { Command, type Interfaces } from '@oclif/core';
import { type KeysToCamelCase } from './utils.js';
export type ApifyFlags<T extends typeof Command> = KeysToCamelCase<Interfaces.InferredFlags<T['flags']>>;
export type ApifyArgs<T extends typeof Command> = Interfaces.InferredArgs<T['args']>;
/**
 * Adding parsing flags to oclif Command class
 */
export declare abstract class ApifyCommand<T extends typeof Command> extends Command {
    protected telemetryData: Record<string, unknown>;
    protected flags: ApifyFlags<T>;
    protected args: ApifyArgs<T>;
    init(): Promise<void>;
    finally(err?: Error): Promise<any>;
    printHelp(customCommand?: string): Promise<void>;
    protected pluralString(amount: number, singular: string, plural: string): string;
}
//# sourceMappingURL=apify_command.d.ts.map