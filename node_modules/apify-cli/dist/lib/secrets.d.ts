export declare const getSecretsFile: () => any;
export declare const addSecret: (name: string, value: string) => Record<string, string>;
export declare const removeSecret: (name: string) => void;
/**
 * Replaces secure values in env with proper values from local secrets file.
 * @param env
 * @param secrets - Object with secrets, if not set, will be load from secrets file.
 */
export declare const replaceSecretsValue: (env: Record<string, string>, secrets?: Record<string, string>) => {};
interface EnvVar {
    name: string;
    value: string;
    isSecret?: boolean;
}
/**
 * Transform env to envVars format attribute, which uses Apify API
 * It replaces secrets to values from secrets file.
 * @param secrets - Object with secrets, if not set, will be load from secrets file.
 */
export declare const transformEnvToEnvVars: (env: Record<string, string>, secrets?: Record<string, string>) => EnvVar[];
export {};
//# sourceMappingURL=secrets.d.ts.map